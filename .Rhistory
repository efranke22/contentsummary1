rename("ReportedDate" = "reportedDate",
"Offense" = "offense",
"Description" = "description",
"Lat" = "centerLat",
"Long" = "centerLong")
minneapolisCrime2018b <- read_csv("Data/Crime/Police_Incidents_2018.csv") %>%
select(ReportedDate, Offense, Description, Lat, Long)
minneapolisCrime2019 <- read_csv("Data/Crime/Police_Incidents_2019.csv") %>%
select(reportedDate, offense, description, centerLat, centerLong) %>%
rename("ReportedDate" = "reportedDate",
"Offense" = "offense",
"Description" = "description",
"Lat" = "centerLat",
"Long" = "centerLong")
minneapolisCrime2020 <- read_csv("Data/Crime/Police_Incidents_2020.csv") %>%
select(reportedDate, offense, description, centerLat, centerLong) %>%
rename("ReportedDate" = "reportedDate",
"Offense" = "offense",
"Description" = "description",
"Lat" = "centerLat",
"Long" = "centerLong")
minneapolisCrime2021 <- read_csv("Data/Crime/Police_Incidents_2021.csv") %>%
select(reportedDate, offense, description, centerLat, centerLong) %>%
rename("ReportedDate" = "reportedDate",
"Offense" = "offense",
"Description" = "description",
"Lat" = "centerLat",
"Long" = "centerLong")
minneapolisCrime2022 <- read_csv("Data/Crime/Police_Incidents_2022.csv") %>%
select(reportedDate, offense, description, centerLat, centerLong) %>%
rename("ReportedDate" = "reportedDate",
"Offense" = "offense",
"Description" = "description",
"Lat" = "centerLat",
"Long" = "centerLong")
# Saint Paul crime
saintpaulcrime <- read_csv("Data/Crime/Crime_Incident_Report.csv")
# Gentrification Information
load('Data/gent_clean.RData')
minneapolisCrime <- bind_rows(minneapolisCrime2010, minneapolisCrime2011, minneapolisCrime2012, minneapolisCrime2013, minneapolisCrime2014, minneapolisCrime2015, minneapolisCrime2016, minneapolisCrime2017, minneapolisCrime2018a, minneapolisCrime2018b, minneapolisCrime2019, minneapolisCrime2020, minneapolisCrime2021, minneapolisCrime2022) %>%
mutate(year = as.numeric(substr(ReportedDate, 1, 4)),
date = as.Date.character(ReportedDate, format = "%Y/%m/%d"))
minn_sf <- minneapolisCrime %>%
filter(Lat >0, Long <0) %>%
st_as_sf(coords = c("Long", "Lat"), crs = "NAD83")
tract_points <- st_join(minn_sf, left = FALSE, gent_clean["tract"])
plot(tract_points$geometry, pch=21, cex=0.7, col="purple", bg="gray80")
plot(gent_clean$geometry, border="gray20", col=NA, add=T)
crimes_per_tract <- tract_points %>%
group_by(tract, year) %>%
count()
crimes_per_tract
crimes_per_tract %>%
filter(tract == 1055)
crimes_per_tract %>%
filter(tract == 1066)
tract_aggregated <- st_join(gent_clean, crimes_per_tract, left = FALSE) %>%
select(-tract.y) %>%
rename("tract" = "tract.x") %>%
mutate(crimes_per_1000 = (n/population_2010) * 1000,
crimes_per_1000d = as.factor(case_when(crimes_per_1000 <=23 ~ "0-23",
crimes_per_1000 >23 & crimes_per_1000 <= 36 ~ "24-36",
crimes_per_1000 > 36 & crimes_per_1000 <= 52 ~ "37-52",
crimes_per_1000 >52 & crimes_per_1000 <= 75 ~ "53-75",
TRUE ~ "75+")),
crimes_per_1000d = fct_relevel(crimes_per_1000d, levels = c("0-23", "24-36", "37-52", "53-75", "75+")))
tract_aggregated %>%
filter(tract == 1055)
crimes_per_tract %>%
filter(tract == 1055)
st_join(gent_clean, crimes_per_tract, left = FALSE) %>%
select(-tract.y) %>%
rename("tract" = "tract.x") %>%
mutate(crimes_per_1000 = (n/population_2010) * 1000,
crimes_per_1000d = as.factor(case_when(crimes_per_1000 <=23 ~ "0-23",
crimes_per_1000 >23 & crimes_per_1000 <= 36 ~ "24-36",
crimes_per_1000 > 36 & crimes_per_1000 <= 52 ~ "37-52",
crimes_per_1000 >52 & crimes_per_1000 <= 75 ~ "53-75",
TRUE ~ "75+")),
crimes_per_1000d = fct_relevel(crimes_per_1000d, levels = c("0-23", "24-36", "37-52", "53-75", "75+"))) %>%
filter(tract == 1055 & year == 2012)
st_join(gent_clean, crimes_per_tract, left = FALSE) %>%
select(-tract.y) %>%
rename("tract" = "tract.x") %>%
mutate(crimes_per_1000 = (n/population_2010) * 1000,
crimes_per_1000d = as.factor(case_when(crimes_per_1000 <=23 ~ "0-23",
crimes_per_1000 >23 & crimes_per_1000 <= 36 ~ "24-36",
crimes_per_1000 > 36 & crimes_per_1000 <= 52 ~ "37-52",
crimes_per_1000 >52 & crimes_per_1000 <= 75 ~ "53-75",
TRUE ~ "75+")),
crimes_per_1000d = fct_relevel(crimes_per_1000d, levels = c("0-23", "24-36", "37-52", "53-75", "75+"))) %>%
filter(tract != 1055 & year != 2012)
st_join(gent_clean, crimes_per_tract, left = FALSE) %>%
select(-tract.y) %>%
rename("tract" = "tract.x") %>%
mutate(crimes_per_1000 = (n/population_2010) * 1000,
crimes_per_1000d = as.factor(case_when(crimes_per_1000 <=23 ~ "0-23",
crimes_per_1000 >23 & crimes_per_1000 <= 36 ~ "24-36",
crimes_per_1000 > 36 & crimes_per_1000 <= 52 ~ "37-52",
crimes_per_1000 >52 & crimes_per_1000 <= 75 ~ "53-75",
TRUE ~ "75+")),
crimes_per_1000d = fct_relevel(crimes_per_1000d, levels = c("0-23", "24-36", "37-52", "53-75", "75+"))) %>%
filter(tract != 1055, year != 2012, n !=150)
st_join(gent_clean, crimes_per_tract, left = FALSE) %>%
select(-tract.y) %>%
rename("tract" = "tract.x") %>%
mutate(crimes_per_1000 = (n/population_2010) * 1000,
crimes_per_1000d = as.factor(case_when(crimes_per_1000 <=23 ~ "0-23",
crimes_per_1000 >23 & crimes_per_1000 <= 36 ~ "24-36",
crimes_per_1000 > 36 & crimes_per_1000 <= 52 ~ "37-52",
crimes_per_1000 >52 & crimes_per_1000 <= 75 ~ "53-75",
TRUE ~ "75+")),
crimes_per_1000d = fct_relevel(crimes_per_1000d, levels = c("0-23", "24-36", "37-52", "53-75", "75+")))
st_join(gent_clean, crimes_per_tract, left = FALSE) %>%
select(-tract.y) %>%
rename("tract" = "tract.x") %>%
mutate(crimes_per_1000 = (n/population_2010) * 1000,
crimes_per_1000d = as.factor(case_when(crimes_per_1000 <=23 ~ "0-23",
crimes_per_1000 >23 & crimes_per_1000 <= 36 ~ "24-36",
crimes_per_1000 > 36 & crimes_per_1000 <= 52 ~ "37-52",
crimes_per_1000 >52 & crimes_per_1000 <= 75 ~ "53-75",
TRUE ~ "75+")),
crimes_per_1000d = fct_relevel(crimes_per_1000d, levels = c("0-23", "24-36", "37-52", "53-75", "75+"))) %>%
filter(tract != 1055 & year != 2012 & n !=150)
tract_aggregated %>%
filter(tract == 1055 & year == 2012 & n ==150)
tract_aggregated %>%
filter(!(tract == 1055 & year == 2012 & n ==150))
tract_aggregated %>%
filter(tract == 1066)
st_join(gent_clean, crimes_per_tract, left = FALSE) %>%
select(-tract.y) %>%
rename("tract" = "tract.x") %>%
mutate(crimes_per_1000 = (n/population_2010) * 1000,
crimes_per_1000d = as.factor(case_when(crimes_per_1000 <=23 ~ "0-23",
crimes_per_1000 >23 & crimes_per_1000 <= 36 ~ "24-36",
crimes_per_1000 > 36 & crimes_per_1000 <= 52 ~ "37-52",
crimes_per_1000 >52 & crimes_per_1000 <= 75 ~ "53-75",
TRUE ~ "75+")),
crimes_per_1000d = fct_relevel(crimes_per_1000d, levels = c("0-23", "24-36", "37-52", "53-75", "75+"))) %>%
filter(!(tract == 1055 & year == 2012 & n ==150),
!(tract == 1066 & year == 2012 & n ==205))
tract_aggregated %>%
filter(!(tract == 10566 & year == 2012 & n ==205))
tract_aggregated %>%
#filter(tract == 1066)
filter(!(tract == 1066 & year == 2012 & n ==205))
tract_aggregated %>%
filter(tract == 1066)
crimes_per_tract %>%
filter(tract == 1066)
tract_aggregated %>%
dplyr::group_by(tract, canGent, county, population_2010, propbachelors2010, propbachelors2020, change_bachelors, home_value_increase, percent_rent_increase, year) %>%
dplyr::summarise(n = dplyr::n(), .groups = "drop") %>%
dplyr::filter(n > 1L)
crimes_per_tract %>%
filter(tract == 1066)
tract_aggregated %>%
filter(tract == 1066)
st_join(gent_clean, crimes_per_tract, left = FALSE) %>%
select(-tract.y) %>%
rename("tract" = "tract.x") %>%
mutate(crimes_per_1000 = (n/population_2010) * 1000,
crimes_per_1000d = as.factor(case_when(crimes_per_1000 <=23 ~ "0-23",
crimes_per_1000 >23 & crimes_per_1000 <= 36 ~ "24-36",
crimes_per_1000 > 36 & crimes_per_1000 <= 52 ~ "37-52",
crimes_per_1000 >52 & crimes_per_1000 <= 75 ~ "53-75",
TRUE ~ "75+")),
crimes_per_1000d = fct_relevel(crimes_per_1000d, levels = c("0-23", "24-36", "37-52", "53-75", "75+"))) %>%
filter(!(tract == 1055 & year == 2012 & n ==150),
!(tract == 1066 & year == 2012 & n ==181))
tract_aggregated <- st_join(gent_clean, crimes_per_tract, left = FALSE) %>%
select(-tract.y) %>%
rename("tract" = "tract.x") %>%
mutate(crimes_per_1000 = (n/population_2010) * 1000,
crimes_per_1000d = as.factor(case_when(crimes_per_1000 <=23 ~ "0-23",
crimes_per_1000 >23 & crimes_per_1000 <= 36 ~ "24-36",
crimes_per_1000 > 36 & crimes_per_1000 <= 52 ~ "37-52",
crimes_per_1000 >52 & crimes_per_1000 <= 75 ~ "53-75",
TRUE ~ "75+")),
crimes_per_1000d = fct_relevel(crimes_per_1000d, levels = c("0-23", "24-36", "37-52", "53-75", "75+"))) %>%
filter(!(tract == 1055 & year == 2012 & n ==150),
!(tract == 1066 & year == 2012 & n ==181))
tract_aggregated <- st_join(gent_clean, crimes_per_tract, left = FALSE) %>%
select(-tract.y) %>%
rename("tract" = "tract.x") %>%
mutate(crimes_per_1000 = (n/population_2010) * 1000,
crimes_per_1000d = as.factor(case_when(crimes_per_1000 <=23 ~ "0-23",
crimes_per_1000 >23 & crimes_per_1000 <= 36 ~ "24-36",
crimes_per_1000 > 36 & crimes_per_1000 <= 52 ~ "37-52",
crimes_per_1000 >52 & crimes_per_1000 <= 75 ~ "53-75",
TRUE ~ "75+")),
crimes_per_1000d = fct_relevel(crimes_per_1000d, levels = c("0-23", "24-36", "37-52", "53-75", "75+"))) %>%
filter(!(tract == 1055 & year == 2012 & n ==150),
!(tract == 1066 & year == 2012 & n ==181))
save(tract_aggregated, file = 'Data/tract_aggregated.RData')
tract_points <- st_join(minn_sf, left = FALSE, gent_clean["tract"]) %>%
st_join(gent_clean) %>%
select(-tract.y) %>%
rename("tract" = "tract.x")
tract_points
tract_aggregated %>%
mutate(crimes_per_1000 = round(crimes_per_1000, 0)) %>%
#st_drop_geometry() %>%
pivot_wider(id_cols = c(tract:percent_rent_increase),names_from = year, values_from = crimes_per_1000)
load("Data/tract_aggregated.RData")
load("Data/tract_aggregated.RData")
tract_aggregated %>%
mutate(crimes_per_1000 = round(crimes_per_1000, 0))
tract_aggregated %>%
mutate(crimes_per_1000 = round(crimes_per_1000, 0)) %>%
st_drop_geometry() %>%
pivot_wider(id_cols = c(tract:percent_rent_increase),names_from = year, values_from = crimes_per_1000)
crimes_wide <- tract_aggregated %>%
mutate(crimes_per_1000 = round(crimes_per_1000, 0)) %>%
st_drop_geometry() %>%
pivot_wider(id_cols = c(tract:percent_rent_increase),names_from = year, values_from = crimes_per_1000)
crimes_wide <- crimes_wide %>%
mutate(increase19to22 = `2022` - `2019`)
glm(increase19to22 ~ ding, data = tract_aggregated, family = "poisson")
crimes_wide <- crimes_wide %>%
mutate(increase19to22 = `2022` - `2019`)
glm(increase19to22 ~ ding, data = tract_aggregated, family = "poisson")
glm(increase19to22 ~ ding, data = crimes_wide, family = "poisson")
crimes_wide
crimes_wide <- tract_aggregated %>%
mutate(crimes_per_1000 = round(crimes_per_1000, 0)) %>%
st_drop_geometry() %>%
pivot_wider(id_cols = c(tract:ding),names_from = year, values_from = crimes_per_1000)
crimes_wide <- crimes_wide %>%
mutate(increase19to22 = `2022` - `2019`)
glm(increase19to22 ~ ding, data = crimes_wide, family = "poisson")
View(crimes_wide)
knitr::opts_chunk$set(echo = TRUE)
# Libraries
library(tidyverse)
library(sf)
library(stringr)
# Minneapolis crime
minneapolisCrime2010 <- read_csv("Data/Crime/Police_Incidents_2010.csv") %>%
select(ReportedDate, Offense, Description, Lat, Long)
minneapolisCrime2011 <- read_csv("Data/Crime/Police_Incidents_2011.csv") %>%
select(ReportedDate, Offense, Description, Lat, Long)
minneapolisCrime2012 <- read_csv("Data/Crime/Police_Incidents_2012.csv") %>%
select(ReportedDate, Offense, Description, Lat, Long)
minneapolisCrime2013 <- read_csv("Data/Crime/Police_Incidents_2013.csv") %>%
select(ReportedDate, Offense, Description, Lat, Long)
minneapolisCrime2014 <- read_csv("Data/Crime/Police_Incidents_2014.csv") %>%
select(ReportedDate, Offense, Description, Lat, Long)
minneapolisCrime2015 <- read_csv("Data/Crime/Police_Incidents_2015.csv") %>%
select(ReportedDate, Offense, Description, Lat, Long)
minneapolisCrime2016 <- read_csv("Data/Crime/Police_Incidents_2016.csv") %>%
select(ReportedDate, Offense, Description, Lat, Long)
minneapolisCrime2017 <- read_csv("Data/Crime/Police_Incidents_2017.csv") %>%
select(ReportedDate, Offense, Description, Lat, Long)
minneapolisCrime2018a <- read_csv("Data/Crime/Police_Incidents_2018_PIMS.csv") %>%
select(reportedDate, offense, description, centerLat, centerLong) %>%
rename("ReportedDate" = "reportedDate",
"Offense" = "offense",
"Description" = "description",
"Lat" = "centerLat",
"Long" = "centerLong")
minneapolisCrime2018b <- read_csv("Data/Crime/Police_Incidents_2018.csv") %>%
select(ReportedDate, Offense, Description, Lat, Long)
minneapolisCrime2019 <- read_csv("Data/Crime/Police_Incidents_2019.csv") %>%
select(reportedDate, offense, description, centerLat, centerLong) %>%
rename("ReportedDate" = "reportedDate",
"Offense" = "offense",
"Description" = "description",
"Lat" = "centerLat",
"Long" = "centerLong")
minneapolisCrime2020 <- read_csv("Data/Crime/Police_Incidents_2020.csv") %>%
select(reportedDate, offense, description, centerLat, centerLong) %>%
rename("ReportedDate" = "reportedDate",
"Offense" = "offense",
"Description" = "description",
"Lat" = "centerLat",
"Long" = "centerLong")
minneapolisCrime2021 <- read_csv("Data/Crime/Police_Incidents_2021.csv") %>%
select(reportedDate, offense, description, centerLat, centerLong) %>%
rename("ReportedDate" = "reportedDate",
"Offense" = "offense",
"Description" = "description",
"Lat" = "centerLat",
"Long" = "centerLong")
minneapolisCrime2022 <- read_csv("Data/Crime/Police_Incidents_2022.csv") %>%
select(reportedDate, offense, description, centerLat, centerLong) %>%
rename("ReportedDate" = "reportedDate",
"Offense" = "offense",
"Description" = "description",
"Lat" = "centerLat",
"Long" = "centerLong")
# Saint Paul crime
saintpaulcrime <- read_csv("Data/Crime/Crime_Incident_Report.csv")
# Gentrification Information
load('Data/gent_clean.RData')
minneapolisCrime <- bind_rows(minneapolisCrime2010, minneapolisCrime2011, minneapolisCrime2012, minneapolisCrime2013, minneapolisCrime2014, minneapolisCrime2015, minneapolisCrime2016, minneapolisCrime2017, minneapolisCrime2018a, minneapolisCrime2018b, minneapolisCrime2019, minneapolisCrime2020, minneapolisCrime2021, minneapolisCrime2022) %>%
mutate(year = as.numeric(substr(ReportedDate, 1, 4)),
date = as.Date.character(ReportedDate, format = "%Y/%m/%d"))
minn_sf <- minneapolisCrime %>%
filter(Lat >0, Long <0) %>%
st_as_sf(coords = c("Long", "Lat"), crs = "NAD83")
save(minneapolisCrime, "minneapolisCrime.RData")
save(minneapolisCrime, file = "Data/Crime/minneapolisCrime.RData")
tract_points <- st_join(minn_sf, left = FALSE, gent_clean["tract"])
plot(tract_points$geometry, pch=21, cex=0.7, col="purple", bg="gray80")
plot(gent_clean$geometry, border="gray20", col=NA, add=T)
crimes_per_tract <- tract_points %>%
group_by(tract, year) %>%
count()
crimes_per_tract
crimes_per_tract %>%
filter(tract == 204)
crimes_per_tract
crimes_per_tract %>%
filter(tract == 204) %>%
arrange(desc(n))
crimes_per_tract %>%
#filter(tract == 204) %>%
arrange(desc(n))
crimes_per_tract %>%
#filter(tract == 204) %>%
arrange(n)
tract_points
tract_aggregated %>%
mutate(crimes_per_1000 = round(crimes_per_1000, 0)) %>%
st_drop_geometry() %>%
pivot_wider(id_cols = c(tract:ding),names_from = year, values_from = crimes_per_1000)
crimes_per_tract
# Libraries
library(tidyverse)
library(sf)
library(stringr)
load("Data/Crime/minneapolisCrime.RData")
tract_aggregated %>%
mutate(crimes_per_1000 = round(crimes_per_1000, 0)) %>%
st_drop_geometry() %>%
pivot_wider(id_cols = c(tract:ding),names_from = year, values_from = crimes_per_1000) %>%
replace(is.na(.), 0)
load("Data/tract_aggregated.RData")
crimes_wide <- tract_aggregated %>%
mutate(crimes_per_1000 = round(crimes_per_1000, 0)) %>%
st_drop_geometry() %>%
pivot_wider(id_cols = c(tract:ding),names_from = year, values_from = crimes_per_1000) %>%
replace(is.na(.), 0)
View(crimes_wide)
View(tract_aggregated)
View(minneapolisCrime)
knitr::opts_chunk$set(echo = TRUE)
load('Data/tract_points.RData')
tract_points
tract_points %>%
count(tract, year)
crimes_wide <- crimes_wide %>%
mutate(increase19to22 = `2022` - `2019`)
View(crimes_wide)
load("Data/tract_aggregated.RData")
library(tidyverse)
library(sf)
crimes_wide <- tract_aggregated %>%
mutate(crimes_per_1000 = round(crimes_per_1000, 0)) %>%
st_drop_geometry() %>%
pivot_wider(id_cols = c(tract:ding),names_from = year, values_from = crimes_per_1000) %>%
replace(is.na(.), 0)
crimes_wide <- crimes_wide %>%
mutate(increase19to21 = `2021` - `2019`)
View(crimes_wide)
crimes_wide <- tract_aggregated %>%
mutate(crimes_per_1000 = round(crimes_per_1000, 0)) %>%
st_drop_geometry() %>%
pivot_wider(id_cols = c(tract:ding),names_from = year, values_from = crimes_per_1000) %>%
replace(is.na(.), 0)
crimes_wide <- crimes_wide %>%
mutate(prop_increase19to21 = round((`2021` - `2019`)/`2019`))
View(crimes_wide)
crimes_wide <- tract_aggregated %>%
mutate(crimes_per_1000 = round(crimes_per_1000, 0)) %>%
st_drop_geometry() %>%
pivot_wider(id_cols = c(tract:ding),names_from = year, values_from = crimes_per_1000) %>%
replace(is.na(.), 0) %>%
mutate(avg2010to2015 = (`2010` + `2011` + `2012` + `2013` + `2014` + `2015`)/6)
mod1 = glm(`2021` ~ ding + avg2010to2015, data = crimes_wide, family = "poisson")
View(mod1)
summary(mod1)
mod1 = glm(`2021` ~ ding*canGent + avg2010to2015, data = crimes_wide, family = "poisson")
summary(mod1)
cor(crimes_wide)
odd <- crimes_wide %>%
select(ding, canGent, avg2010to2015, `2021`)
cor(odd)
head(crimes_wide)
mod1 = glm(`2021` ~ ding + canGent + avg2010to2015, data = crimes_wide, family = "poisson")
summary(mod1)
mod1 = glm(`2021` ~ ding + canGent + avg2010to2015 + population_2010, data = crimes_wide, family = "poisson")
summary(mod1)
knitr::opts_chunk$set(echo = TRUE)
library(snpStats)
library(tidyverse)
library(broom)
library(NatParksPalettes)
load("/Users/erinfranke/Desktop/GWAStutorial-master/conversionTable.RData")
pathM <- paste("/Users/erinfranke/Desktop/GWAStutorial-master/public/Genomics/108Malay_2527458snps", c(".bed", ".bim", ".fam"), sep = "")
SNP_M <- read.plink(pathM[1], pathM[2], pathM[3])
pathI <- paste("/Users/erinfranke/Desktop/GWAStutorial-master/public/Genomics/105Indian_2527458snps", c(".bed", ".bim", ".fam"), sep = "")
SNP_I <- read.plink(pathI[1], pathI[2], pathI[3])
pathC <- paste("/Users/erinfranke/Desktop/GWAStutorial-master/public/Genomics/110Chinese_2527458snps", c(".bed", ".bim", ".fam"), sep = "")
SNP_C <- read.plink(pathC[1], pathC[2], pathC[3])
SNP <- rbind(SNP_M$genotypes, SNP_I$genotypes, SNP_C$genotypes)
SNP
SNP[1:100, 1:323]
SNP[1:323, 1:100]
chr1_100 <- SNP[1:323, 1:100]
hapmap.ld <- ld(chr1_100, depth = 99, stats = "R.squared", symmetric = TRUE)
color.pal <- natparks.pals("Acadia", 10)
image(hapmap.ld, lwd = 0, cuts = 9, col.regions = color.pal, colorkey = TRUE)
chr1_100 <- SNP[1:323, 1:500]
hapmap.ld <- ld(chr1_100, depth = 499, stats = "R.squared", symmetric = TRUE)
color.pal <- natparks.pals("Acadia", 10)
image(hapmap.ld, lwd = 0, cuts = 9, col.regions = color.pal, colorkey = TRUE)
chr1_200 <- SNP[1:323, 1:200]
hapmap.ld <- ld(chr1_200, depth = 199, stats = "R.squared", symmetric = TRUE)
color.pal <- natparks.pals("Acadia", 10)
image(hapmap.ld, lwd = 0, cuts = 9, col.regions = color.pal, colorkey = TRUE)
individuals <- rbind(SNP_M$fam, SNP_I$fam, SNP_C$fam)
head(individuals)
maf <- col.summary(SNP)$MAF
mono <- which(maf == 0)
SNP[,-mono]
maf_chr1_200 <- col.summary(chr1_200)$MAF
mono <- which(maf_chr1_200 == 0)
maf_chr1_200[,-mono]
maf_chr1_200 <- col.summary(chr1_200)$MAF
#get monomorphic SNPs only
mono <- which(maf_chr1_200 == 0)
maf_chr1_200[,-mono]
mono
maf_chr1_200[,-mono]
chr1_200[,-mono]
# calculate LD on polymorphic SNPs only
hapmap.ld.nomono <- ld(chr1_200[,-mono], depth = 199-length(mono), stats = "R.squared", symmetric = TRUE)
image(hapmap.ld.nomono, lwd = 0, cuts = 9, col.regions = color.pal, colorkey = TRUE)
chr1_200[,-mono]
X <- as(SNP, "numeric")
X[1:323, 1:500]
snp_500 <- X[1:323, 1:500]
dim(snp_500)
maf <- col.summary(snp_500)$MAF
maf <- col.summary(SNP[1:323, 1:500])$MAF
monomorphic <- which(maf == 0)
X <- X[,-monomorphic]
# check the dimensions after filtering
dim(X)
snp_500 <- snp_500[,-monomorphic]
dim(X)
# check the dimensions after filtering
dim(snp_500)
do_one_sim<- function(i){
# simulate null trait
y <- rnorm(n = 165, mean = 0, sd = 1)
# implement GWAS
pvals <- c()
for(i in 1:211){
mod <- lm(y ~ snp_500[,i])
pvals[i] <- tidy(mod)$p.value[2]
}
# record smallest p-value
min(pvals)
}
set.seed(494)
simresmclapply <- mclapply(1:10000, do_one_sim_three, mc.cores = 4)
library(parallel)
set.seed(494)
simresmclapply <- mclapply(1:10000, do_one_sim_three, mc.cores = 4)
set.seed(494)
simresmclapply <- mclapply(1:10000, do_one_sim, mc.cores = 4)
replicate(10000, do_one_sim())
snp_500
dim(snp_500)
do_one_sim<- function(i){
# simulate null trait
y <- rnorm(n = 165, mean = 0, sd = 1)
# implement GWAS
pvals <- c()
for(i in 1:323){
mod <- lm(y ~ snp_500[,i])
pvals[i] <- tidy(mod)$p.value[2]
}
# record smallest p-value
min(pvals)
}
set.seed(494)
simresmclapply <- mclapply(1:10000, do_one_sim, mc.cores = 4)
do_one_sim<- function(i){
# simulate null trait
y <- rnorm(n = 323, mean = 0, sd = 1)
# implement GWAS
pvals <- c()
for(i in 1:211){
mod <- lm(y ~ snp_500[,i])
pvals[i] <- tidy(mod)$p.value[2]
}
# record smallest p-value
min(pvals)
}
set.seed(494)
simresmclapply <- mclapply(1:10000, do_one_sim, mc.cores = 4)
simresmclapply <- mclapply(1:10000, do_one_sim, mc.cores = 4)
simresmclapply <- mclapply(1:10000, do_one_sim, mc.cores = 4)
set.seed(494)
simresmclapply <- mclapply(1:1000, do_one_sim, mc.cores = 4)
set.seed(494)
simres3 <- replicate(1000, do_one_sim())
